"""modifications to customers, applications, loans

Revision ID: 7275cb7186b5
Revises: 573e05408c02
Create Date: 2024-09-25 07:59:00.983349

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7275cb7186b5'
down_revision: Union[str, None] = '573e05408c02'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('loan_applications', sa.Column('duration_in_months', sa.Integer(), nullable=False))
    op.add_column('loan_applications', sa.Column('status_of_existing_checking_account', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('credit_history', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('purpose', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('savings_account_bonds', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('present_employment_since', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('installment_rate_in_percentage_of_disposable_income', sa.Integer(), nullable=False))
    op.add_column('loan_applications', sa.Column('other_debtors_guarantors', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('present_residence_since', sa.Integer(), nullable=False))
    op.add_column('loan_applications', sa.Column('property', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('other_installment_plans', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('housing', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('number_of_existing_credits_at_this_bank', sa.Integer(), nullable=False))
    op.add_column('loan_applications', sa.Column('job', sa.String(), nullable=False))
    op.add_column('loan_applications', sa.Column('number_of_people_being_liable_to_provide_maintenance_for', sa.Integer(), nullable=False))
    op.add_column('loan_applications', sa.Column('nc_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('loan_applications', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('loan_applications', 'application_date')
    op.drop_column('loans', 'date_applied')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('loans', sa.Column('date_applied', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('loan_applications', sa.Column('application_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('loan_applications', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('loan_applications', 'nc_info')
    op.drop_column('loan_applications', 'number_of_people_being_liable_to_provide_maintenance_for')
    op.drop_column('loan_applications', 'job')
    op.drop_column('loan_applications', 'number_of_existing_credits_at_this_bank')
    op.drop_column('loan_applications', 'housing')
    op.drop_column('loan_applications', 'other_installment_plans')
    op.drop_column('loan_applications', 'property')
    op.drop_column('loan_applications', 'present_residence_since')
    op.drop_column('loan_applications', 'other_debtors_guarantors')
    op.drop_column('loan_applications', 'installment_rate_in_percentage_of_disposable_income')
    op.drop_column('loan_applications', 'present_employment_since')
    op.drop_column('loan_applications', 'savings_account_bonds')
    op.drop_column('loan_applications', 'purpose')
    op.drop_column('loan_applications', 'credit_history')
    op.drop_column('loan_applications', 'status_of_existing_checking_account')
    op.drop_column('loan_applications', 'duration_in_months')
    op.drop_column('customers', 'marital_status')
    # ### end Alembic commands ###
